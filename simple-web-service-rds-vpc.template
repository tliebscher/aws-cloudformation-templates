{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Resources": {
    "vpc": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": "10.0.0.0/16",
        "InstanceTenancy": "default",
        "EnableDnsSupport": "true",
        "EnableDnsHostnames": "true",
        "Tags": [
          {
            "Key": "Name",
            "Value": "if-vpc"
          }
        ]
      }
    },
    "subnetmanagedazd": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.102.0/24",
        "AvailabilityZone": "us-east-1d",
        "VpcId": {
          "Ref": "vpc"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "AWS managed AZ D"
          }
        ]
      }
    },
    "subnetplatformazc": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.0.0/24",
        "AvailabilityZone": "us-east-1a",
        "VpcId": {
          "Ref": "vpc"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "Platform EC2 AZ A"
          }
        ]
      }
    },
    "subnetplatformazd": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.2.0/24",
        "AvailabilityZone": "us-east-1d",
        "VpcId": {
          "Ref": "vpc"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "Platform EC2 AZ D"
          }
        ]
      }
    },
    "subnetmanagedaza": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.100.0/24",
        "AvailabilityZone": "us-east-1a",
        "VpcId": {
          "Ref": "vpc"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "AWS managed AZ A"
          }
        ]
      }
    },
    "subnetmanagedazc": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.101.0/24",
        "AvailabilityZone": "us-east-1c",
        "VpcId": {
          "Ref": "vpc"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "AWS managed AZ C"
          }
        ]
      }
    },
    "igw": {
      "Type": "AWS::EC2::InternetGateway",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "vpc-internet-gateway"
          }
        ]
      }
    },
    "dhcp": {
      "Type": "AWS::EC2::DHCPOptions",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "Default"
          }
        ],
        "DomainName": "ec2.internal",
        "DomainNameServers": [
          "AmazonProvidedDNS"
        ]
      }
    },
    "vpcacl": {
      "Type": "AWS::EC2::NetworkAcl",
      "Properties": {
        "VpcId": {
          "Ref": "vpc"
        }
      }
    },
    "vpcrtbinternal": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "vpc"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "Only Internally Accessible"
          }
        ]

}    },
    "vpcrtbpublic": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "vpc"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "Publicly Accessible"
          }
        ]
      }
    },
    "elbsrv": {
      "Type": "AWS::ElasticLoadBalancing::LoadBalancer",
      "Properties": {
        "Scheme": "internal",
        "Subnets": [
          {
            "Ref": "subnetplatformazc"
          },
          {
            "Ref": "subnetplatformazd"
          },
          {
            "Ref": "subnetplatformazc"
          }
        ],
        "HealthCheck": {
          "HealthyThreshold": "2",
          "Interval": "5",
          "Target": "TCP:80",
          "Timeout": "2",
          "UnhealthyThreshold": "2"
        },
        "ConnectionDrainingPolicy": {
          "Enabled": "true",
          "Timeout": "60"
        },
        "ConnectionSettings": {
          "IdleTimeout": "60"
        },
        "CrossZone": "true",
        "Instances": [
          {
            "Ref": "srv1"
          },
          {
            "Ref": "srv2"
          }
        ],
        "SecurityGroups": [
          {
            "Ref": "sgelbsrv"
          }
        ],
        "Listeners": [
          {
            "InstancePort": "80",
            "LoadBalancerPort": "80",
            "Protocol": "HTTP",
            "InstanceProtocol": "HTTP"
          }
        ]
      }
    },
    "elbweb": {
      "Type": "AWS::ElasticLoadBalancing::LoadBalancer",
      "Properties": {
        "Subnets": [
          {
            "Ref": "subnetplatformazc"
          },
          {
            "Ref": "subnetplatformazd"
          },
          {
            "Ref": "subnetplatformazc"
          }
        ],
        "HealthCheck": {
          "HealthyThreshold": "2",
          "Interval": "5",
          "Target": "TCP:80",
          "Timeout": "2",
          "UnhealthyThreshold": "2"
        },
        "ConnectionDrainingPolicy": {
          "Enabled": "true",
          "Timeout": "60"
        },
        "ConnectionSettings": {
          "IdleTimeout": "60"
        },
        "CrossZone": "true",
        "Instances": [
          {
            "Ref": "web1"
          },
          {
            "Ref": "web2"
          }
        ],
        "SecurityGroups": [
          {
            "Ref": "sqelbweb"
          }
        ],
        "Listeners": [
          {
            "InstancePort": "80",
            "LoadBalancerPort": "80",
            "Protocol": "HTTP",
            "InstanceProtocol": "HTTP"
          },
          {
            "InstancePort": "80",
            "LoadBalancerPort": "443",
            "Protocol": "HTTPS",
            "InstanceProtocol": "HTTP",
            "SSLCertificateId": "arn:aws:iam::034209291126:server-certificate/production-cert-201504",
            "PolicyNames": [
              "AWSConsole-LBCookieStickinessPolicy-vpc-catalog-web-1401445775899"
            ]
          }
        ],
        "LBCookieStickinessPolicy": [
          {
            "PolicyName": "AWSConsole-LBCookieStickinessPolicy-vpc-catalog-web-1401445775899",
            "CookieExpirationPeriod": "7200"
          }
        ]
      }
    },
    "web2": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "DisableApiTermination": "false",
        "InstanceInitiatedShutdownBehavior": "stop",
        "ImageId": "ami-0bcab86e",
        "InstanceType": "m1.small",
        "KeyName": "if-aws-ec2-keypair",
        "Monitoring": "false",
        "Tags": [
          {
            "Key": "Name",
            "Value": "Catalog Web"
          }
        ],
        "NetworkInterfaces": [
          {
            "DeleteOnTermination": "true",
            "Description": "Primary network interface",
            "DeviceIndex": 0,
            "SubnetId": {
              "Ref": "subnetplatformazd"
            },
            "PrivateIpAddresses": [
              {
                "PrivateIpAddress": "10.0.2.113",
                "Primary": "true"
              }
            ],
            "GroupSet": [
              {
                "Ref": "sqec2web"
              }
            ],
            "AssociatePublicIpAddress": "true"
          }
        ]
      }
    },
    "srv2": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "DisableApiTermination": "false",
        "InstanceInitiatedShutdownBehavior": "stop",
        "ImageId": "ami-0bcab86e",
        "InstanceType": "m3.medium",
        "KeyName": "if-aws-ec2-keypair",
        "Monitoring": "false",
        "Tags": [
          {
            "Key": "Name",
            "Value": "Catalog Service"
          }
        ],
        "NetworkInterfaces": [
          {
            "DeleteOnTermination": "true",
            "Description": "Primary network interface",
            "DeviceIndex": 0,
            "SubnetId": {
              "Ref": "subnetplatformazc"
            },
            "PrivateIpAddresses": [
              {
                "PrivateIpAddress": "10.0.1.229",
                "Primary": "true"
              }
            ],
            "GroupSet": [
              {
                "Ref": "sgec2srv"
              }
            ],
            "AssociatePublicIpAddress": "true"
          }
        ]
      }
    },
    "web1": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "DisableApiTermination": "false",
        "InstanceInitiatedShutdownBehavior": "stop",
        "ImageId": "ami-0bcab86e",
        "InstanceType": "m1.small",
        "KeyName": "if-aws-ec2-keypair",
        "Monitoring": "false",
        "Tags": [
          {
            "Key": "Name",
            "Value": "Catalog Web"
          }
        ],
        "NetworkInterfaces": [
          {
            "DeleteOnTermination": "true",
            "Description": "Primary network interface",
            "DeviceIndex": 0,
            "SubnetId": {
              "Ref": "subnetplatformazd"
            },
            "PrivateIpAddresses": [
              {
                "PrivateIpAddress": "10.0.2.235",
                "Primary": "true"
              }
            ],
            "GroupSet": [
              {
                "Ref": "sqec2web"
              }
            ],
            "AssociatePublicIpAddress": "true"
          }
        ]
      }
    },
    "srv1": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "DisableApiTermination": "false",
        "InstanceInitiatedShutdownBehavior": "stop",
        "ImageId": "ami-0bcab86e",
        "InstanceType": "m3.medium",
        "KeyName": "if-aws-ec2-keypair",
        "Monitoring": "false",
        "Tags": [
          {
            "Key": "Name",
            "Value": "Catalog Service"
          }
        ],
        "NetworkInterfaces": [
          {
            "DeleteOnTermination": "true",
            "Description": "Primary network interface",
            "DeviceIndex": 0,
            "SubnetId": {
              "Ref": "subnetplatformazd"
            },
            "PrivateIpAddresses": [
              {
                "PrivateIpAddress": "10.0.2.247",
                "Primary": "true"
              }
            ],
            "GroupSet": [
              {
                "Ref": "sgec2srv"
              }
            ],
            "AssociatePublicIpAddress": "true"
          }
        ]
      }
    },
    "rds": {
      "Type": "AWS::RDS::DBInstance",
      "Properties": {
        "AllocatedStorage": "10",
        "AllowMajorVersionUpgrade": "false",
        "AutoMinorVersionUpgrade": "true",
        "DBInstanceClass": "db.m1.small",
        "Port": "3306",
        "StorageType": "standard",
        "BackupRetentionPeriod": "30",
        "MasterUsername": "root",
        "MasterUserPassword": "MyPassword",
        "PreferredBackupWindow": "03:00-03:30",
        "PreferredMaintenanceWindow": "sat:04:30-sat:05:00",
        "DBName": "MyDatabase",
        "Engine": "mysql",
        "EngineVersion": "5.6.22",
        "LicenseModel": "general-public-license",
        "MultiAZ": "true",
        "DBSubnetGroupName": {
          "Ref": "dbsubnet"
        },
        "VPCSecurityGroups": [
          {
            "Ref": "sgrds"
          }
        ]
      }
    },
    "cache": {
      "Type": "AWS::ElastiCache::CacheCluster",
      "Properties": {
        "AutoMinorVersionUpgrade": "true",
        "AZMode": "single-az",
        "CacheNodeType": "cache.m1.small",
        "Engine": "memcached",
        "EngineVersion": "1.4.14",
        "NumCacheNodes": "1",
        "PreferredAvailabilityZone": "us-east-1d",
        "PreferredMaintenanceWindow": "mon:00:00-mon:01:00",
        "CacheSubnetGroupName": {
          "Ref": "cachesubnet"
        },
        "VpcSecurityGroupIds": [
          {
            "Fn::GetAtt": [
              "sgcache",
              "GroupId"
            ]
          }
        ]
      }
    },
    "s3media": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "AccessControl": "Private",
        "VersioningConfiguration": {
          "Status": "Suspended"
        }
      }
    },
    "dbsubnet": {
      "Type": "AWS::RDS::DBSubnetGroup",
      "Properties": {
        "DBSubnetGroupDescription": "RDS subnet group in dev vpc",
        "SubnetIds": [
          {
            "Ref": "subnetmanagedazc"
          },
          {
            "Ref": "subnetmanagedaza"
          },
          {
            "Ref": "subnetmanagedazd"
          }
        ]
      }
    },
    "cachesubnet": {
      "Type": "AWS::ElastiCache::SubnetGroup",
      "Properties": {
        "Description": "vpc-cache-subnet-group",
        "SubnetIds": [
          {
            "Ref": "subnetmanagedazc"
          },
          {
            "Ref": "subnetmanagedaza"
          },
          {
            "Ref": "subnetmanagedazd"
          }
        ]
      }
    },
    "notifyme": {
      "Type": "AWS::SNS::Topic",
      "Properties": {
        "DisplayName": "NotifyMe",
        "Subscription": [
          {
            "Endpoint": "it-admin@iconicfuture.com",
            "Protocol": "email"
          }
        ]
      }
    },
    "systemdown": {
      "Type": "AWS::SNS::Topic",
      "Properties": {
        "DisplayName": "SystemDown",
        "Subscription": [
          {
            "Endpoint": "it-admin@iconicfuture.com",
            "Protocol": "email"
          }
        ]
      }
    },
    "sqelbweb": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "if-vpc-catalog-web-elb",
        "VpcId": {
          "Ref": "vpc"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "if-vpc-catalog-web-elb"
          }
        ]
      }
    },
    "sqec2web": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "if-vpc-catalog-web-node",
        "VpcId": {
          "Ref": "vpc"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "if-vpc-catalog-web-node"
          }
        ]
      }
    },
    "sgec2srv": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "if-vpc-prod-srv-node",
        "VpcId": {
          "Ref": "vpc"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "if-vpc-prod-srv-node"
          }
        ]
      }
    },
    "sgcache": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "if-vpc-prod-cache",
        "VpcId": {
          "Ref": "vpc"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "if-vpc-prod-cache"
          }
        ]
      }
    },
    "sgelbsrv": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "if-vpc-prod-srv-elb",
        "VpcId": {
          "Ref": "vpc"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "if-vpc-prod-srv-elb"
          }
        ]
      }
    },
    "sgrds": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "if-vpc-prod-rds-platform",
        "VpcId": {
          "Ref": "vpc"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "if-vpc-prod-rds-platform"
          }
        ]
      }
    },
    "snspolicyNotifyMe": {
      "Type": "AWS::SNS::TopicPolicy",
      "Properties": {
        "Topics": [
          {
            "Ref": "notifyme"
          }
        ],
        "PolicyDocument": {
          "Version": "2008-10-17",
          "Id": "__default_policy_ID",
          "Statement": [
            {
              "Sid": "__default_statement_ID",
              "Effect": "Allow",
              "Principal": {
                "AWS": "*"
              },
              "Action": [
                "SNS:Subscribe",
                "SNS:ListSubscriptionsByTopic",
                "SNS:DeleteTopic",
                "SNS:GetTopicAttributes",
                "SNS:Publish",
                "SNS:RemovePermission",
                "SNS:AddPermission",
                "SNS:Receive",
                "SNS:SetTopicAttributes"
              ],
              "Resource": {
                "Ref": "notifyme"
              },
              "Condition": {
                "StringEquals": {
                  "AWS:SourceOwner": "034209291126"
                }
              }
            }
          ]
        }
      }
    },
    "snspolicySystemDown": {
      "Type": "AWS::SNS::TopicPolicy",
      "Properties": {
        "Topics": [
          {
            "Ref": "systemdown"
          }
        ],
        "PolicyDocument": {
          "Version": "2008-10-17",
          "Id": "__default_policy_ID",
          "Statement": [
            {
              "Sid": "__default_statement_ID",
              "Effect": "Allow",
              "Principal": {
                "AWS": "*"
              },
              "Action": [
                "SNS:Subscribe",
                "SNS:ListSubscriptionsByTopic",
                "SNS:DeleteTopic",
                "SNS:GetTopicAttributes",
                "SNS:Publish",
                "SNS:RemovePermission",
                "SNS:AddPermission",
                "SNS:Receive",
                "SNS:SetTopicAttributes"
              ],
              "Resource": {
                "Ref": "systemdown"
              },
              "Condition": {
                "StringEquals": {
                  "AWS:SourceOwner": "034209291126"
                }
              }
            }
          ]
        }
      }
    },
    "acl5": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "CidrBlock": "0.0.0.0/0",
        "Egress": "true",
        "Protocol": "-1",
        "RuleAction": "allow",
        "RuleNumber": "100",
        "NetworkAclId": {
          "Ref": "vpcacl"
        }
      }
    },
    "acl6": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "CidrBlock": "0.0.0.0/0",
        "Protocol": "-1",
        "RuleAction": "allow",
        "RuleNumber": "100",
        "NetworkAclId": {
          "Ref": "vpcacl"
        }
      }
    },
    "subnetacl15": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "NetworkAclId": {
          "Ref": "vpcacl"
        },
        "SubnetId": "subnet-d4b09a92"
      }
    },
    "subnetacl16": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "NetworkAclId": {
          "Ref": "vpcacl"
        },
        "SubnetId": {
          "Ref": "subnetplatformazd"
        }
      }
    },
    "subnetacl17": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "NetworkAclId": {
          "Ref": "vpcacl"
        },
        "SubnetId": {
          "Ref": "subnetmanagedazc"
        }
      }
    },
    "subnetacl18": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "NetworkAclId": {
          "Ref": "vpcacl"
        },
        "SubnetId": {
          "Ref": "subnetplatformazc"
        }
      }
    },
    "subnetacl19": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "NetworkAclId": {
          "Ref": "vpcacl"
        },
        "SubnetId": {
          "Ref": "subnetmanagedaza"
        }
      }
    },
    "subnetacl20": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "NetworkAclId": {
          "Ref": "vpcacl"
        },
        "SubnetId": {
          "Ref": "subnetmanagedazd"
        }
      }
    },
    "subnetacl21": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "NetworkAclId": {
          "Ref": "vpcacl"
        },
        "SubnetId": {
          "Ref": "subnetplatformazc"
        }
      }
    },
    "gw3": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "VpcId": {
          "Ref": "vpc"
        },
        "InternetGatewayId": {
          "Ref": "igw"
        }
      }
    },
    "subnetroute17": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "vpcrtbinternal"
        },
        "SubnetId": {
          "Ref": "subnetmanagedazc"
        }
      }
    },
    "subnetroute18": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "vpcrtbinternal"
        },
        "SubnetId": {
          "Ref": "subnetmanagedazd"
        }
      }
    },
    "subnetroute20": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "vpcrtbinternal"
        },
        "SubnetId": {
          "Ref": "subnetmanagedaza"
        }
      }
    },
    "subnetroute21": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "vpcrtbpublic"
        },
        "SubnetId": {
          "Ref": "subnetplatformazd"
        }
      }
    },
    "subnetroute22": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "vpcrtbpublic"
        },
        "SubnetId": {
          "Ref": "subnetplatformazc"
        }
      }
    },
    "subnetroute23": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "vpcrtbpublic"
        },
        "SubnetId": {
          "Ref": "subnetplatformazc"
        }
      }
    },
    "subnetroute24": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "vpcrtbpublic"
        },
        "SubnetId": "subnet-d4b09a92"
      }
    },
    "route3": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "RouteTableId": {
          "Ref": "vpcrtbpublic"
        },
        "GatewayId": {
          "Ref": "igw"
        }
      },
      "DependsOn": "gw3"
    },
    "dchpassoc3": {
      "Type": "AWS::EC2::VPCDHCPOptionsAssociation",
      "Properties": {
        "VpcId": {
          "Ref": "vpc"
        },
        "DhcpOptionsId": {
          "Ref": "dhcp"
        }
      }
    },
    "ingress97": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sqelbweb"
        },
        "IpProtocol": "tcp",
        "FromPort": "443",
        "ToPort": "443",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "ingress98": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sqelbweb"
        },
        "IpProtocol": "tcp",
        "FromPort": "80",
        "ToPort": "80",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "ingress99": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sqec2web"
        },
        "IpProtocol": "tcp",
        "FromPort": "80",
        "ToPort": "80",
        "SourceSecurityGroupId": {
          "Ref": "sqelbweb"
        },
        "SourceSecurityGroupOwnerId": "034209291126"
      }
    },
    "ingress100": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sqec2web"
        },
        "IpProtocol": "tcp",
        "FromPort": "22",
        "ToPort": "22",
        "CidrIp": "217.86.254.61/32"
      }
    },
    "ingress101": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sqec2web"
        },
        "IpProtocol": "tcp",
        "FromPort": "22",
        "ToPort": "22",
        "CidrIp": "91.60.243.210/32"
      }
    },
    "ingress102": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgec2srv"
        },
        "IpProtocol": "tcp",
        "FromPort": "80",
        "ToPort": "80",
        "SourceSecurityGroupId": {
          "Ref": "sgelbsrv"
        },
        "SourceSecurityGroupOwnerId": "034209291126"
      }
    },
    "ingress103": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgec2srv"
        },
        "IpProtocol": "tcp",
        "FromPort": "22",
        "ToPort": "22",
        "CidrIp": "217.86.254.61/32"
      }
    },
    "ingress104": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgec2srv"
        },
        "IpProtocol": "tcp",
        "FromPort": "22",
        "ToPort": "22",
        "CidrIp": "91.50.86.123/32"
      }
    },
    "ingress107": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgcache"
        },
        "IpProtocol": "tcp",
        "FromPort": "11211",
        "ToPort": "11211",
        "SourceSecurityGroupId": {
          "Ref": "sgec2srv"
        },
        "SourceSecurityGroupOwnerId": "034209291126"
      }
    },
    "ingress108": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgcache"
        },
        "IpProtocol": "tcp",
        "FromPort": "11211",
        "ToPort": "11211",
        "SourceSecurityGroupId": {
          "Ref": "sqec2web"
        },
        "SourceSecurityGroupOwnerId": "034209291126"
      }
    },
    "ingress114": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgelbsrv"
        },
        "IpProtocol": "tcp",
        "FromPort": "80",
        "ToPort": "80",
        "SourceSecurityGroupId": {
          "Ref": "sqec2web"
        },
        "SourceSecurityGroupOwnerId": "034209291126"
      }
    },
    "ingress119": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgrds"
        },
        "IpProtocol": "tcp",
        "FromPort": "3306",
        "ToPort": "3306",
        "SourceSecurityGroupId": {
          "Ref": "sqec2web"
        },
        "SourceSecurityGroupOwnerId": "034209291126"
      }
    },
    "ingress120": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgrds"
        },
        "IpProtocol": "tcp",
        "FromPort": "3306",
        "ToPort": "3306",
        "SourceSecurityGroupId": {
          "Ref": "sgec2srv"
        },
        "SourceSecurityGroupOwnerId": "034209291126"
      }
    },
    "egress23": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "sqelbweb"
        },
        "IpProtocol": "-1",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "egress24": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "sqec2web"
        },
        "IpProtocol": "-1",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "egress25": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "sgec2srv"
        },
        "IpProtocol": "-1",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "egress26": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "sgcache"
        },
        "IpProtocol": "-1",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "egress28": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "sgelbsrv"
        },
        "IpProtocol": "-1",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "egress30": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "sgrds"
        },
        "IpProtocol": "-1",
        "CidrIp": "0.0.0.0/0"
      }
    }
  },
  "Description": "new catalog environment derived from prod environment"
}
